{"version":3,"sources":["./src/app/gifs/services/gifs.service.ts","./src/environments/environment.ts","./src/app/gifs/gifs-page/gifs-page.component.ts","./src/app/gifs/gifs-page/gifs-page.component.html","./src/app/shared/shared.module.ts","./src/app/gifs/gifs.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/sidebar/sidebar.component.html","./src/app/shared/sidebar/sidebar.component.ts","./src/app/gifs/busqueda/busqueda.component.ts","./src/app/gifs/busqueda/busqueda.component.html","./src/app/gifs/resultados/resultados.component.html","./src/app/gifs/resultados/resultados.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Gif, SearchGifsResponse } from '../interfaces/gifs.interfaces';\n\n// Este injectable hace que el servicio sea utilizable globalmente en toda la app\n@Injectable({\n  providedIn: 'root'\n})\nexport class GifsService {\n\n    private apiKey     : string = 'aln43nNnyQT1G2H4qMlU9D6Nvrxe2zle';\n    private servicioUrl: string = 'https://api.giphy.com/v1/gifs';\n    private _historial : string[] = [];\n\n    public resultados: Gif[] = [];\n\n    get historial() {\n      return [...this._historial];\n    }\n\n    constructor(private http: HttpClient){\n\n      // this._historial = localStorage.getItem('historial');  En teoria seria asi\n      // JSON.parse convierte un string a un objeto\n      //if (localStorage.getItem('historial')){\n        //this._historial = JSON.parse( localStorage.getItem('historial'));\n\n      this._historial = JSON.parse(localStorage.getItem('historial')!) || [];\n\n      this.resultados = JSON.parse(localStorage.getItem('resultados')!) || [];\n\n      }\n\n\n    buscarGifs(query: string) {\n\n      // Toma el valor string en minuscula, para evitar duplicador\n      query = query.trim().toLocaleLowerCase();\n\n      // Includes me dice si existe o si incluye el argumento (query)\n      if( !this._historial.includes(query)){\n        this._historial.unshift( query );\n\n        // Este metodo corta el arreglo en 10, para que no crezca con mas de 10 items\n        this._historial = this._historial.splice(0, 10);\n\n        // JSON.stringify convierte un objeto en string, metodo para almacenar en el local storage\n        localStorage.setItem('historial', JSON.stringify(this._historial));\n      }\n\n      // Permite editar parametros HTTP, deben ser todos string\n      const params = new HttpParams()\n          .set('api_key', this.apiKey)\n          .set('limit', '10')\n          .set('q', query);\n\n      console.log(params.toString());\n\n      // Este metodo realiza la consulta http, luego se subscribe e imprime la data obtenida\n      // Subscribe se ejecuta cuando se obtiene la respuesta del get\n      // Estas respuestas devuelven un observable\n      this.http.get<SearchGifsResponse>(`${this.servicioUrl}/search`, {params: params})\n          .subscribe((resp) => {\n            console.log(resp.data);\n            this.resultados = resp.data;\n            localStorage.setItem('resultados', JSON.stringify(this.resultados));\n\n          })\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gifs-page',\n  templateUrl: './gifs-page.component.html',\n  styles: [\n  ]\n})\nexport class GifsPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row-p3\">\n    <div class=\"col\">\n      <app-busqueda></app-busqueda>\n    </div>\n  </div>\n\n<hr />\n\n<div class=\"row\">\n  <div class=\"col\">\n    <app-resultados></app-resultados>\n </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidebarComponent } from './sidebar/sidebar.component';\n\n\n\n@NgModule({\n  declarations: [\n    SidebarComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SidebarComponent\n  ]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GifsPageComponent } from './gifs-page/gifs-page.component';\nimport { BusquedaComponent } from './busqueda/busqueda.component';\nimport { ResultadosComponent } from './resultados/resultados.component';\n\n\n\n@NgModule({\n  declarations: [\n    GifsPageComponent,\n    BusquedaComponent,\n    ResultadosComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GifsPageComponent\n  ]\n})\nexport class GifsModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gifsApp';\n}\n","<div class=\"d-flex\">\n\n<!-- Sidebar -->\n<app-sidebar></app-sidebar>\n\n<app-gifs-page class=\"container\"></app-gifs-page>\n\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { GifsModule } from './gifs/gifs.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SharedModule,\n    GifsModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"bg-dark border-right p-3\" id=\"sidebar\">\n  <h3 class=\"text-light\">\n    Gifs-App\n  </h3>\n  <hr class=\"text-white\" />\n\n  <div class=\"lis-group list-reset\">\n    <a *ngFor=\"let item of historial\"\n    href=\"#\"\n    (click)=\"buscar(item)\"\n    class=\"list-group-item list-group-item-action\">\n      {{item | titlecase}} <!-- titlecase, pipe que transforma el historial con iniciales mayusculas -->\n    </a>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { GifsService } from 'src/app/gifs/services/gifs.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n\n  get historial() {\n    return this.gifsService.historial;\n  }\n\n  constructor(private gifsService: GifsService) { }\n\n  // realiza las busquedas desde el historial, consumiendo los metodos del servicio\n  buscar(termino: string){\n    this.gifsService.buscarGifs(termino)\n  }\n\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { GifsService } from '../services/gifs.service';\n\n@Component({\n  selector: 'app-busqueda',\n  templateUrl: './busqueda.component.html',\n  styles: [\n  ]\n})\nexport class BusquedaComponent {\n\n  // Manipulacion del input para que aparezca en cosola luego de un enter y para que se limpie\n\n  @ViewChild('txtBuscar') txtBuscar!: ElementRef<HTMLInputElement>;  //operador para asegurarse que el objeto no es nulo\n\n  constructor(private gifsServices: GifsService) {}\n\n  buscar() {\n    const valor  = this.txtBuscar.nativeElement.value;\n\n    if (valor.trim().length === 0) {  // metodo trim quita los espacios para tomar el length del string\n      return;\n    }\n\n    this.gifsServices.buscarGifs(valor);\n\n    this.txtBuscar.nativeElement.value = '';\n  }\n\n}\n","<h5>Buscar:</h5>\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    placeholder=\"Buscar gifs...\"\n    (keyup.enter)=\"buscar()\"\n    #txtBuscar>\n    <!-- keyup.enter evento cuando se presiona enter, keyup solo hace referencia a todas las teclas\n\n      #referencia para decorador ViewChild -->\n","<!-- <ul>\n  <li *ngFor=\"let gif of resultados\">\n    {{gif.title}}\n  </li>\n</ul> -->\n\n<div class=\"row\">\n  <div *ngFor=\"let gif of resultados\"\n        class=\"col-md-4 col-sm-6 animate__animated animate__bounce\">\n    <div class=\"card\">\n      <!-- Los corchetes le indican que valor debe establecer, si no los tuviera seria un valor estatico del tipo string  -->\n      <img [src]=\"gif.images.downsized_medium.url\"\n           [alt]=\"gif.title\"\n           class=\"card-img-top\">\n\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          <!-- {{gif.title}} -->\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { GifsService } from '../services/gifs.service';\n\n@Component({\n  selector: 'app-resultados',\n  templateUrl: './resultados.component.html',\n  styles: [\n  ]\n})\nexport class ResultadosComponent {\n\n  get resultados() {\n    return this.gifsService.resultados;\n  }\n\n  constructor(private gifsService: GifsService) { }\n\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}